digraph "GLObjectValuePassConnector&lt; T &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{GLObjectValuePassConnector\< T \>\n|# myRetriever\l# mySource\l# myContainer\l|+ GLObjectValuePassConnector()\l+ ~GLObjectValuePassConnector()\l+ updateAll()\l+ clear()\l+ removeObject()\l# passValue()\l- GLObjectValuePassConnector()\l- operator=()\l* updateAll()\l* clear()\l* removeObject()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #myLock" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{MFXMutex\n|# lock_\l- mutexHandle\l|+ lock()\l+ locked()\l+ MFXMutex()\l+ unlock()\l+ ~MFXMutex()\l- MFXMutex()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d79/class_m_f_x_mutex.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{AbstractMutex\n||+ AbstractMutex()\l+ lock()\l+ unlock()\l+ ~AbstractMutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d30/class_abstract_mutex.html",tooltip="An abstract class for encapsulating mutex implementations. "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #myObject" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{GUIGlObject\n|+ INVALID_ID\l- myFullName\l- myGlID\l- myGLObjectType\l- myMicrosimID\l- myParamWindows\l- myPrefix\l|+ drawGLAdditional()\l+ drawName()\l+ GUIGlObject()\l+ GUIGlObject()\l+ ~GUIGlObject()\l+ getFullName()\l+ getParentName()\l+ getGlID()\l+ getPopUpMenu()\l+ getParameterWindow()\l+ getTypeParameterWindow()\l+ getMicrosimID()\l+ setMicrosimID()\l+ getType()\l+ getCenteringBoundary()\l+ drawGL()\l+ addParameterTable()\l+ removeParameterTable()\l# buildAdditionalsPopupOptions()\l# buildShapePopupOptions()\l# setPrefix()\l# buildPopupHeader()\l# buildCenterPopupEntry()\l# buildNameCopyPopupEntry()\l# buildSelectionPopupEntry()\l# buildShowParamsPopupEntry()\l# buildShowTypeParamsPopup\lEntry()\l# buildPositionCopyEntry()\l# buildShowManipulatorPopup\lEntry()\l- createFullName()\l- GUIGlObject()\l- operator=()\l* getFullName()\l* getParentName()\l* getGlID()\l* getPopUpMenu()\l* getParameterWindow()\l* getTypeParameterWindow()\l* getMicrosimID()\l* setMicrosimID()\l* getType()\l* getCenteringBoundary()\l* drawGL()\l* addParameterTable()\l* removeParameterTable()\l* buildPopupHeader()\l* buildCenterPopupEntry()\l* buildNameCopyPopupEntry()\l* buildSelectionPopupEntry()\l* buildShowParamsPopupEntry()\l* buildShowTypeParamsPopup\lEntry()\l* buildPositionCopyEntry()\l* buildShowManipulatorPopup\lEntry()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d94/class_g_u_i_gl_object.html"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +TypeNames\n-GUIGlObjectTypeNames\lInitializer" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{StringBijection\< GUIGlObject\lType \>\n|- myString2T\l- myT2String\l|+ addAlias()\l+ addKeysInto()\l+ get()\l+ getString()\l+ getStrings()\l+ has()\l+ hasString()\l+ insert()\l+ remove()\l+ size()\l+ StringBijection()\l+ StringBijection()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d41/class_string_bijection.html"];
}
