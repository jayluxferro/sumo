digraph "NIVissimEdge"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{NIVissimEdge\n|- myAmWithinJunction\l- myClosedLanes\l- myConnectionClusters\l- myDistrictConnections\l- myIncomingConnections\l- myLaneSpeeds\l- myName\l- myNoLanes\l- myOutgoingConnections\l- myPatchedSpeeds\l- myToTreatAsSame\l- myType\l- myZuschlag1\l- myZuschlag2\l- myDict\l- myLanesWithMissingSpeeds\l- myMaxID\l|+ addIncomingConnection()\l+ addOutgoingConnection()\l+ addToConnectionCluster()\l+ addToTreatAsSame()\l+ buildGeom()\l+ checkDistrictConnectionExistanceAt()\l+ getBegin2D()\l+ getBestIncoming()\l+ getBestOutgoing()\l+ getConnectionTo()\land 11 more...\l+ buildConnectionClusters()\l+ dict_buildNBEdges()\l+ dict_checkEdges2Join()\l+ dict_propagateSpeeds()\l+ dictionary()\l+ dictionary()\l+ dictionary()\l+ reportUnsetSpeeds()\l- buildNBEdge()\l- checkUnconnectedLaneSpeeds()\l- getFromNode()\l- getOutgoingConnected()\l- getRealSpeed()\l- getToNode()\l- propagateOwn()\l- propagateSpeed()\l- remapOneOfNodes()\l- resolveSameNode()\l- setDistrictSpeed()\l- getNodeSecure()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{NIVissimAbstractEdge\n|# myDisturbances\l# myGeom\l# myID\l# myNode\l- myDict\l|+ addDisturbance()\l+ buildGeom()\l+ crossesEdge()\l+ crossesEdgeAtPoint()\l+ getDisturbances()\l+ getGeometry()\l+ getGeomPosition()\l+ getID()\l+ hasNodeCluster()\l+ NIVissimAbstractEdge()\l+ overlapsWith()\l+ setNodeCluster()\l+ splitAssigning()\l+ ~NIVissimAbstractEdge()\l+ clearDict()\l+ dictionary()\l+ dictionary()\l+ getWithin()\l+ splitAndAssignToNodes()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d14/class_n_i_vissim_abstract_edge.html"];
}
