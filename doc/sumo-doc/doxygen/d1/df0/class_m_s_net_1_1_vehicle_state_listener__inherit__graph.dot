digraph "MSNet::VehicleStateListener"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{MSNet::VehicleStateListener\n||+ vehicleStateChanged()\l+ VehicleStateListener()\l+ ~VehicleStateListener()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{MSDevice_Vehroutes\l::StateListener\n|+ myDevices\l|+ vehicleStateChanged()\l+ ~StateListener()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/daf/class_m_s_device___vehroutes_1_1_state_listener.html",tooltip="A class that is notified about reroutings. "];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{TraCIServer\n|- myAmEmbedded\l- myCurrentSocket\l- myExecutors\l- myInputStorage\l- myLoadArgs\l- myOutputStorage\l- myParameterSizes\l- myServerSocket\l- mySocketReorderRequests\l- mySockets\l- mySubscriptionCache\l- mySubscriptions\l- myTargetTime\l- myVehicleStateChanges\l- myDoCloseConnection\l- myInstance\l|+ cleanup()\l+ collectObjectsInRange()\l+ getLoadArgs()\l+ getTargetTime()\l+ getVehicleStateChanges()\l+ isEmbedded()\l+ processCommandsUntilSimStep()\l+ setTargetTime()\l+ vehicleStateChanged()\l+ writeResponseWithLength()\l+ writeStatusCmd()\l+ writeStatusCmd()\l+ writeErrorStatusCmd()\l+ readTypeCheckingInt()\l+ readTypeCheckingDouble()\l+ readTypeCheckingString()\l+ readTypeCheckingStringList()\l+ readTypeCheckingColor()\l+ readTypeCheckingPosition2D()\l+ readTypeCheckingBoundary()\l+ readTypeCheckingByte()\l+ readTypeCheckingUnsignedByte()\l+ readTypeCheckingPolygon()\l+ getInstance()\l+ openSocket()\l+ close()\l+ wasClosed()\l- addObjectVariableSubscription()\l- checkClientOrdering()\l- dispatchCommand()\l- findObjectShape()\l- initialiseSubscription()\l- nextTargetTime()\l- operator=()\l- processReorderingRequests()\l- processSingleSubscription()\l- readCommandID()\land 6 more...\l- commandGetVersion()\l- postProcessSimulationStep()\l* writeStatusCmd()\l* writeStatusCmd()\l* writeErrorStatusCmd()\l* readTypeCheckingInt()\l* readTypeCheckingDouble()\l* readTypeCheckingString()\l* readTypeCheckingStringList()\l* readTypeCheckingColor()\l* readTypeCheckingPosition2D()\l* readTypeCheckingBoundary()\l* readTypeCheckingByte()\l* readTypeCheckingUnsignedByte()\l* readTypeCheckingPolygon()\l* openSocket()\l* close()\l* wasClosed()\l* commandGetVersion()\l* postProcessSimulationStep()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/da5/class_tra_c_i_server.html",tooltip="TraCI server used to control sumo by a remote TraCI client. "];
}
