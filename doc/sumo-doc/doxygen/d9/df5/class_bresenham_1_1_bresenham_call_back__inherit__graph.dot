digraph "Bresenham::BresenhamCallBack"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{Bresenham::BresenhamCallBack\n||+ BresenhamCallBack()\l+ execute()\l+ ~BresenhamCallBack()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{NBEdge::ToEdgeConnections\lAdder\n|- myConnections\l- myTransitions\l|+ execute()\l+ getBuiltConnections()\l+ ToEdgeConnectionsAdder()\l+ ~ToEdgeConnectionsAdder()\l- operator=()\l- ToEdgeConnectionsAdder()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d8c/class_n_b_edge_1_1_to_edge_connections_adder.html",tooltip="A class that being a bresenham-callback assigns the incoming lanes to the edges. "];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{NBNode::ApproachingDivider\n|- myApproaching\l- myAvailableLanes\l- myCurrentOutgoing\l|+ ApproachingDivider()\l+ execute()\l+ numAvailableLanes()\l+ spread()\l+ ~ApproachingDivider()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dc7/class_n_b_node_1_1_approaching_divider.html",tooltip="Computes lane-2-lane connections. "];
}
