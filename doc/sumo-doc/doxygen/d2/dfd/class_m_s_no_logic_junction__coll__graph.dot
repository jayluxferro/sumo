digraph "MSNoLogicJunction"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node4 [label="{MSNoLogicJunction\n|- myIncomingLanes\l- myInternalLanes\l|+ getInternalLanes()\l+ MSNoLogicJunction()\l+ postloadInit()\l+ ~MSNoLogicJunction()\l- MSNoLogicJunction()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{MSJunction\n|# myEmptyLanes\l# myEmptyLinks\l# myIncoming\l# myLinkLeaders\l# myOutgoing\l# myType\l|+ addIncoming()\l+ addOutgoing()\l+ getFoeInternalLanes()\l+ getFoeLinks()\l+ getIncoming()\l+ getInternalLanes()\l+ getOutgoing()\l+ getPosition()\l+ getShape()\l+ getType()\l+ isLeader()\l+ MSJunction()\l+ passedJunction()\l+ postloadInit()\l+ ~MSJunction()\l- MSJunction()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/de4/class_m_s_junction.html",tooltip="The base class for an intersection. "];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Named\n|# myID\l|+ addTo()\l+ getID()\l+ Named()\l+ setID()\l+ ~Named()\l+ getIDSecure()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dbf/class_named.html",tooltip="Base class for objects which have an id. "];
  Node7 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Parameterised\n|- myMap\l|+ clearParameter()\l+ getDouble()\l+ getMap()\l+ getParameter()\l+ knowsParameter()\l+ Parameterised()\l+ Parameterised()\l+ setParameter()\l+ unsetParameter()\l+ updateParameter()\l+ writeParams()\l+ ~Parameterised()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dc7/class_parameterised.html",tooltip="An upper class for objects with additional parameters. "];
  Node8 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #myShape" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{PositionVector\n||+ add()\l+ add()\l+ angleAt2D()\l+ append()\l+ area()\l+ around()\l+ beginEndAngle()\l+ closePolygon()\l+ crosses()\l+ distance2D()\land 65 more...\l+ positionAtOffset()\l+ positionAtOffset2D()\l+ sideOffset()\l- intersects()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d56/class_position_vector.html",tooltip="A list of positions. "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{AbstractPoly\n||+ AbstractPoly()\l+ AbstractPoly()\l+ around()\l+ crosses()\l+ overlapsWith()\l+ partialWithin()\l+ ~AbstractPoly()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d1a/class_abstract_poly.html"];
  Node10 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{std::vector\< Position \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node8 [color="grey25",fontsize="10",style="solid",label=" +EMPTY" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 -> Node5 [color="grey25",fontsize="10",style="solid",label=" #myPosition" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{Position\n|- myX\l- myY\l- myZ\l|+ add()\l+ add()\l+ add()\l+ almostSame()\l+ angleTo2D()\l+ crossProduct()\l+ distanceSquaredTo()\l+ distanceSquaredTo2D()\l+ distanceTo()\l+ distanceTo2D()\land 28 more...\l+ invalidPosition()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d3b/class_position.html",tooltip="A point in 2D or 3D with translation and scaling methods. "];
  Node11 -> Node11 [color="grey25",fontsize="10",style="solid",label=" +INVALID" ,arrowhead="odiamond",fontname="Helvetica"];
}
