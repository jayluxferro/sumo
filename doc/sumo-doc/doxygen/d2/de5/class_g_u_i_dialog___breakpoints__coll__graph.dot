digraph "GUIDialog_Breakpoints"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{GUIDialog_Breakpoints\n|- myBreakpointLock\l- myBreakpoints\l- myTable\l|+ GUIDialog_Breakpoints()\l+ show()\l+ ~GUIDialog_Breakpoints()\l+ onCmdLoad()\l+ onCmdSave()\l+ onCmdClear()\l+ onCmdClose()\l+ onCmdEditTable()\l# GUIDialog_Breakpoints()\l- encode2TXT()\l- rebuildList()\l* onCmdLoad()\l* onCmdSave()\l* onCmdClear()\l* onCmdClose()\l* onCmdEditTable()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{FXMainWindow\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -myParent" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{GUIMainWindow\n|# myAmGaming\l# myBoldFont\l# myBottomDock\l# myCartesianCoordinate\l# myCartesianFrame\l# myGeoCoordinate\l# myGeoFrame\l# myGLVisual\l# myLeftDock\l# myListInternal\land 8 more...\l|+ addChild()\l+ addChild()\l+ getActiveView()\l+ getBoldFont()\l+ getBuildGLCanvas()\l+ getCartesianLabel()\l+ getCurrentSimTime()\l+ getDelay()\l+ getGeoLabel()\l+ getGLVisual()\land 15 more...\l+ getInstance()\l# GUIMainWindow()\l# setWindowSizeAndPos()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dba/class_g_u_i_main_window.html"];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #myInstance" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" #myTrackerLock" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{MFXMutex\n|# lock_\l- mutexHandle\l|+ lock()\l+ locked()\l+ MFXMutex()\l+ unlock()\l+ ~MFXMutex()\l- MFXMutex()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d79/class_m_f_x_mutex.html"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{AbstractMutex\n||+ AbstractMutex()\l+ lock()\l+ unlock()\l+ ~AbstractMutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d30/class_abstract_mutex.html",tooltip="An abstract class for encapsulating mutex implementations. "];
}
