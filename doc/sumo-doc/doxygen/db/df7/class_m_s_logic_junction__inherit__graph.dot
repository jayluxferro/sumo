digraph "MSLogicJunction"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{MSLogicJunction\n|# myIncomingLanes\l# myInternalLanes\l|+ getInternalLanes()\l+ postloadInit()\l+ ~MSLogicJunction()\l# MSLogicJunction()\l- MSLogicJunction()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{MSJunction\n|# myEmptyLanes\l# myEmptyLinks\l# myIncoming\l# myLinkLeaders\l# myOutgoing\l# myPosition\l# myShape\l# myType\l|+ addIncoming()\l+ addOutgoing()\l+ getFoeInternalLanes()\l+ getFoeLinks()\l+ getIncoming()\l+ getInternalLanes()\l+ getOutgoing()\l+ getPosition()\l+ getShape()\l+ getType()\l+ isLeader()\l+ MSJunction()\l+ passedJunction()\l+ postloadInit()\l+ ~MSJunction()\l- MSJunction()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/de4/class_m_s_junction.html",tooltip="The base class for an intersection. "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Named\n|# myID\l|+ addTo()\l+ getID()\l+ Named()\l+ setID()\l+ ~Named()\l+ getIDSecure()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dbf/class_named.html",tooltip="Base class for objects which have an id. "];
  Node3 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Parameterised\n|- myMap\l|+ clearParameter()\l+ getDouble()\l+ getMap()\l+ getParameter()\l+ knowsParameter()\l+ Parameterised()\l+ Parameterised()\l+ setParameter()\l+ unsetParameter()\l+ updateParameter()\l+ writeParams()\l+ ~Parameterised()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dc7/class_parameterised.html",tooltip="An upper class for objects with additional parameters. "];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{MSInternalJunction\n|- myInternalLaneFoes\l- myInternalLinkFoes\l|+ getFoeInternalLanes()\l+ getFoeLinks()\l+ MSInternalJunction()\l+ postloadInit()\l+ ~MSInternalJunction()\l- MSInternalJunction()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dfb/class_m_s_internal_junction.html"];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{MSRightOfWayJunction\n|# myLinkFoeInternalLanes\l# myLinkFoeLinks\l# myLogic\l|+ getFoeInternalLanes()\l+ getFoeLinks()\l+ getLogic()\l+ MSRightOfWayJunction()\l+ postloadInit()\l+ ~MSRightOfWayJunction()\l- MSRightOfWayJunction()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dcd/class_m_s_right_of_way_junction.html",tooltip="A junction with right-of-way - rules. "];
}
