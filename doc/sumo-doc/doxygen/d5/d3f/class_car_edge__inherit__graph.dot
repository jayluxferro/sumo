digraph "CarEdge&lt; E, L, N, V &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{CarEdge\< E, L, N, V \>\n|- myClassesSuccessorMap\l- myStartPos\l|+ CarEdge()\l+ getSuccessors()\l+ getTravelTime()\l+ includeInRoute()\l+ prohibits()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{IntermodalEdge\< E,\l L, N, V \>\n|# myFollowingEdges\l- myEdge\l- myEfforts\l- myLength\l- myLine\l- myNumericalID\l|+ addSuccessor()\l+ clearSuccessors()\l+ getEdge()\l+ getEffort()\l+ getLength()\l+ getLine()\l+ getNumericalID()\l+ getSuccessors()\l+ getTravelTime()\l+ hasEffort()\land 7 more...\l+ getEffortStatic()\l+ getTravelTimeStatic()\l- IntermodalEdge()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/df8/class_intermodal_edge.html",tooltip="the base edge type that is given to the internal router (SUMOAbstractRouter) "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Named\n|# myID\l|+ addTo()\l+ getID()\l+ Named()\l+ setID()\l+ ~Named()\l+ getIDSecure()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dbf/class_named.html",tooltip="Base class for objects which have an id. "];
}
