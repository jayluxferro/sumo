digraph "RODFNet"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{RODFNet\n|- myAmInHighwayMode\l- myApproachedEdges\l- myApproachingEdges\l- myAvgSpeedFactorLKW\l- myAvgSpeedFactorPKW\l- myDetectorEdges\l- myDetectorsOnEdges\l- myDisallowedEdges\l- myInBetweenNumber\l- myInvalidNumber\l- myKeepTurnarounds\l- myMaxSpeedFactorLKW\l- myMaxSpeedFactorPKW\l- mySinkNumber\l- mySourceNumber\l|+ buildApproachList()\l+ buildDetectorDependencies()\l+ buildEdgeFlowMap()\l+ buildRoutes()\l+ computeTypes()\l+ getAbsPos()\l+ getAvgSpeedFactorLKW()\l+ getAvgSpeedFactorPKW()\l+ getDetectorList()\l+ getMaxSpeedFactorLKW()\land 8 more...\l# buildDetectorEdgeDependencies()\l# computeRoutesFor()\l# getDetectorEdge()\l# hasApproached()\l# hasApproaching()\l# hasInBetweenDetectorsOnly()\l# hasSourceDetector()\l# isDestination()\l# isDestination()\l# isFalseSource()\l# isFalseSource()\l# isSource()\l# isSource()\l# revalidateFlows()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{RONet\n|- myContainers\l- myDefaultPedTypeMayBeDeleted\l- myDefaultVTypeMayBeDeleted\l- myDepartures\l- myDiscardedRouteNo\l- myDistricts\l- myEdges\l- myErrorHandler\l- myFlows\l- myHavePermissions\land 17 more...\l- myInstance\l|+ addRestriction()\l+ cleanup()\l+ getEdgeMap()\l+ getEdgeNumber()\l+ getInternalEdgeNumber()\l+ getRestrictions()\l+ getRouteOutput()\l+ hasPermissions()\l+ openOutput()\l+ RONet()\l+ setPermissionsFound()\l+ writeIntermodal()\l+ ~RONet()\l+ addEdge()\l+ addDistrict()\l+ addDistrictEdge()\l+ getDistricts()\l+ getEdge()\l+ getEdgeForLaneID()\l+ addNode()\l+ getNode()\l+ addStoppingPlace()\l+ getStoppingPlace()\l+ checkVType()\l+ addVehicleType()\l+ addVTypeDistribution()\l+ getVehicleTypeSecure()\l+ addRouteDef()\l+ getRouteDef()\l+ addVehicle()\l+ addFlow()\l+ addPerson()\l+ addContainer()\l+ saveAndRemoveRoutesUntil()\l+ furtherStored()\l+ adaptIntermodalRouter()\l+ getInstance()\l- checkFlows()\l- createBulkRouteRequests()\l- operator=()\l- RONet()\l* addEdge()\l* addDistrict()\l* addDistrictEdge()\l* getDistricts()\l* getEdge()\l* getEdgeForLaneID()\l* addNode()\l* getNode()\l* addStoppingPlace()\l* getStoppingPlace()\l* checkVType()\l* addVehicleType()\l* addVTypeDistribution()\l* getVehicleTypeSecure()\l* addRouteDef()\l* getRouteDef()\l* addVehicle()\l* addFlow()\l* addPerson()\l* addContainer()\l* saveAndRemoveRoutesUntil()\l* furtherStored()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/def/class_r_o_net.html",tooltip="The router&#39;s network representation. "];
}
