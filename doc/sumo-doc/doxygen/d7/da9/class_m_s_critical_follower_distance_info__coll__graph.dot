digraph "MSCriticalFollowerDistanceInfo"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node3 [label="{MSCriticalFollowerDistanceInfo\n|# myMissingGaps\l|+ addFollower()\l+ addLeader()\l+ addLeader()\l+ clear()\l+ MSCriticalFollowerDistanceInfo()\l+ toString()\l+ ~MSCriticalFollowerDistanceInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{MSLeaderDistanceInfo\n|# myDistances\l|+ addLeader()\l+ addLeader()\l+ clear()\l+ MSLeaderDistanceInfo()\l+ MSLeaderDistanceInfo()\l+ operator[]()\l+ toString()\l+ ~MSLeaderDistanceInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d7b/class_m_s_leader_distance_info.html",tooltip="saves leader/follower vehicles and their distances relative to an ego vehicle "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{MSLeaderInfo\n|# egoLeftMost\l# egoRightMost\l# myFreeSublanes\l# myHasVehicles\l# myVehicles\l# myWidth\l|+ addLeader()\l+ clear()\l+ getSublaneBorders()\l+ getSubLanes()\l+ hasStoppedVehicle()\l+ hasVehicles()\l+ MSLeaderInfo()\l+ numFreeSublanes()\l+ numSublanes()\l+ operator[]()\l+ toString()\l+ ~MSLeaderInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dd2/class_m_s_leader_info.html"];
}
