digraph "MEVehicle"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{MEVehicle\n|# myBlockTime\l# myEventTime\l# myLastEntryTime\l# myQueIndex\l# mySegment\l# myStops\l|+ addStop()\l+ estimateLeaveSpeed()\l+ getAccumulatedWaitingTime()\l+ getAngle()\l+ getAverageSpeed()\l+ getBackPositionOnLane()\l+ getBlockTime()\l+ getBlockTimeSeconds()\l+ getConservativeSpeed()\l+ getCurrentLinkPenaltySeconds()\land 33 more...\l+ saveState()\l+ loadState()\l* saveState()\l* loadState()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{MSBaseVehicle\n|# myArrivalLane\l# myArrivalPos\l# myChosenSpeedFactor\l# myCurrEdge\l# myDepartPos\l# myDeparture\l# myDevices\l# myNumberReroutes\l# myParameter\l# myRoute\l# myType\l# NOT_YET_DEPARTED\l|+ activateReminders()\l+ addContainer()\l+ addPerson()\l+ addReminder()\l+ addStops()\l+ createDevice()\l+ getAcceleration()\l+ getArrivalPos()\l+ getChosenSpeedFactor()\l+ getCurrentRouteEdge()\land 41 more...\l+ saveState()\l# calculateArrivalParams()\l# getStopEdges()\l- operator=()\l* MoveReminderCont\l* myMoveReminders\l* saveState()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd6/class_m_s_base_vehicle.html",tooltip="The base class for microscopic and mesoscopic vehicles. "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{SUMOVehicle\n||+ addContainer()\l+ addPerson()\l+ addStop()\l+ getAcceleration()\l+ getAccumulatedWaitingTime()\l+ getAngle()\l+ getArrivalPos()\l+ getBackPositionOnLane()\l+ getChosenSpeedFactor()\l+ getCurrentRouteEdge()\land 43 more...\l+ saveState()\l+ loadState()\l* saveState()\l* loadState()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d61/class_s_u_m_o_vehicle.html",tooltip="Representation of a vehicle. "];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{GUIMEVehicle\n||+ drawAction_drawCarriageClass()\l+ drawRouteHelper()\l+ getAngle()\l+ getColorValue()\l+ getLastLaneChangeOffset()\l+ getParameterWindow()\l+ getPosition()\l+ getStopInfo()\l+ getTypeParameterWindow()\l+ GUIMEVehicle()\l+ selectBlockingFoes()\l+ ~GUIMEVehicle()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/de5/class_g_u_i_m_e_vehicle.html",tooltip="A MSVehicle extended by some values for usage within the gui. "];
}
