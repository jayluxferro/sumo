digraph "MSMeanData"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{MSMeanData\n|# myDumpEmpty\l# myMaxTravelTime\l# myMeasures\l# myMinSamples\l- myAmEdgeBased\l- myDumpBegin\l- myDumpEnd\l- myDumpInternal\l- myEdges\l- myPendingIntervals\l- myPrintDefaults\l- myTrackVehicles\l|+ detectorUpdate()\l+ getMaxTravelTime()\l+ getMinSamples()\l+ init()\l+ MSMeanData()\l+ ~MSMeanData()\l+ writeXMLOutput()\l+ writeXMLDetectorProlog()\l# createValues()\l# getEdgeID()\l# openInterval()\l# resetOnly()\l# writeEdge()\l# writePrefix()\l- MSMeanData()\l- operator=()\l* writeXMLOutput()\l* writeXMLDetectorProlog()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{MSDetectorFileOutput\n||+ MSDetectorFileOutput()\l+ MSDetectorFileOutput()\l+ ~MSDetectorFileOutput()\l* myVehicleTypes\l* writeXMLOutput()\l* writeXMLDetectorProlog()\l* reset()\l* detectorUpdate()\l* buildDetectorGUIRepresentation()\l* vehicleApplies()\l* isTyped()\l* MSDetectorFileOutput()\l* operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/de2/class_m_s_detector_file_output.html",tooltip="Base of value-generating classes (detectors) "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Named\n|# myID\l|+ addTo()\l+ getID()\l+ Named()\l+ setID()\l+ ~Named()\l+ getIDSecure()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dbf/class_named.html",tooltip="Base class for objects which have an id. "];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{MSMeanData_Amitran\n|- myHaltSpeed\l|+ getEdgeID()\l+ MSMeanData_Amitran()\l+ openInterval()\l+ writePrefix()\l+ ~MSMeanData_Amitran()\l+ writeXMLDetectorProlog()\l# createValues()\l# resetOnly()\l- MSMeanData_Amitran()\l- operator=()\l* writeXMLDetectorProlog()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d10/class_m_s_mean_data___amitran.html",tooltip="Network state mean data collector for edges/lanes. "];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{MSMeanData_Emissions\n||+ MSMeanData_Emissions()\l+ ~MSMeanData_Emissions()\l# createValues()\l- MSMeanData_Emissions()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/def/class_m_s_mean_data___emissions.html",tooltip="Emission data collector for edges/lanes. "];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{MSMeanData_Harmonoise\n||+ detectorUpdate()\l+ MSMeanData_Harmonoise()\l+ ~MSMeanData_Harmonoise()\l# createValues()\l- MSMeanData_Harmonoise()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d17/class_m_s_mean_data___harmonoise.html",tooltip="Noise data collector for edges/lanes. "];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{MSMeanData_Net\n|- myHaltSpeed\l|+ MSMeanData_Net()\l+ ~MSMeanData_Net()\l# createValues()\l# resetOnly()\l- MSMeanData_Net()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/da2/class_m_s_mean_data___net.html",tooltip="Network state mean data collector for edges/lanes. "];
}
