digraph "OutputDevice"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{OutputDevice\n||+ realString()\l+ getDevice()\l+ createDeviceByOption()\l+ getDeviceByOption()\l+ closeAll()\l* myOutputDevices\l* myFormatter\l* myAmBinary\l* OutputDevice()\l* ~OutputDevice()\l* ok()\l* close()\l* setPrecision()\l* getPrecision()\l* writeXMLHeader()\land 16 more...\l* getDevice()\l* createDeviceByOption()\l* getDeviceByOption()\l* closeAll()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{GUIMessageWindow::MsgOutput\lDevice\n|- myMsgWindow\l- myStream\l- myType\l|+ MsgOutputDevice()\l+ ~MsgOutputDevice()\l# getOStream()\l# postWriteHook()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d00/class_g_u_i_message_window_1_1_msg_output_device.html"];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{MsgRetrievingFunction\< T \>\n|- myMessage\l- myMsgType\l- myObject\l- myOperation\l|+ MsgRetrievingFunction()\l+ ~MsgRetrievingFunction()\l# getOStream()\l# postWriteHook()\l* getOStream()\l* postWriteHook()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dd6/class_msg_retrieving_function.html",tooltip="Encapsulates an object&#39;s method for using it as a message retriever. "];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{OutputDevice_CERR\n|- myInstance\l|+ getDevice()\l# getOStream()\l# postWriteHook()\l- OutputDevice_CERR()\l- ~OutputDevice_CERR()\l* getOStream()\l* postWriteHook()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d41/class_output_device___c_e_r_r.html",tooltip="An output device that encapsulates cerr. "];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{OutputDevice_COUT\n|- myInstance\l|+ getDevice()\l# getOStream()\l# postWriteHook()\l- OutputDevice_COUT()\l- ~OutputDevice_COUT()\l* getOStream()\l* postWriteHook()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d90/class_output_device___c_o_u_t.html",tooltip="An output device that encapsulates cout. "];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{OutputDevice_File\n|- myFileStream\l|+ OutputDevice_File()\l+ ~OutputDevice_File()\l# getOStream()\l* getOStream()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/dde/class_output_device___file.html",tooltip="An output device that encapsulates an ofstream. "];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{OutputDevice_Network\n|- myMessage\l- mySocket\l|+ OutputDevice_Network()\l+ ~OutputDevice_Network()\l# getOStream()\l# postWriteHook()\l* getOStream()\l* postWriteHook()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/ddd/class_output_device___network.html",tooltip="An output device for TCP/IP network connections. "];
  Node0 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{OutputDevice_String\n|- myStream\l|+ getString()\l+ OutputDevice_String()\l+ ~OutputDevice_String()\l# getOStream()\l* getOStream()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/def/class_output_device___string.html",tooltip="An output device that encapsulates an ofstream. "];
}
