digraph "PedestrianRouterDijkstra&lt; E, L, N, V &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{PedestrianRouterDijkstra\l\< E, L, N, V \>\n||}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{PedestrianRouter\< E,\l L, N, V, DijkstraRouter\l\< IntermodalEdge\< E, L,\l N, V \>, IntermodalTrip\l\< E, N, V \>, prohibited_withPermissions\l\< IntermodalEdge\< E, L, N, V \>, IntermodalTrip\l\< E, N, V \> \> \> \>\n|- myAmClone\l- myInternalRouter\l- myPedNet\l|+ clone()\l+ compute()\l+ compute()\l+ PedestrianRouter()\l+ PedestrianRouter()\l+ prohibit()\l+ recomputeCosts()\l+ ~PedestrianRouter()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d01/class_pedestrian_router.html"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{SUMOAbstractRouter\l\< E, IntermodalTrip\l\< E, N, V \> \>\n|# myBulkMode\l# myOperation\l- myNumQueries\l- myQueryStartTime\l- myQueryTimeSum\l- myQueryVisits\l- myType\l|+ clone()\l+ compute()\l+ endQuery()\l+ getEffort()\l+ recomputeCosts()\l+ setBulkMode()\l+ startQuery()\l+ SUMOAbstractRouter()\l+ ~SUMOAbstractRouter()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d23/class_s_u_m_o_abstract_router.html"];
}
