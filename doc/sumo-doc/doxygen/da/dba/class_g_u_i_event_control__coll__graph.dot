digraph "GUIEventControl"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{GUIEventControl\n||+ addEvent()\l+ execute()\l+ GUIEventControl()\l+ ~GUIEventControl()\l- GUIEventControl()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{MSEventControl\n|- currentTimeStep\l- myEvents\l|+ addEvent()\l+ execute()\l+ isEmpty()\l+ MSEventControl()\l+ setCurrentTimeStep()\l+ ~MSEventControl()\l- getCurrentTimeStep()\l- MSEventControl()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dd4/class_m_s_event_control.html",tooltip="Stores time-dependant events and executes them at the proper time. "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -myLock" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{MFXMutex\n|# lock_\l- mutexHandle\l|+ lock()\l+ locked()\l+ MFXMutex()\l+ unlock()\l+ ~MFXMutex()\l- MFXMutex()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d79/class_m_f_x_mutex.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{AbstractMutex\n||+ AbstractMutex()\l+ lock()\l+ unlock()\l+ ~AbstractMutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d30/class_abstract_mutex.html",tooltip="An abstract class for encapsulating mutex implementations. "];
}
