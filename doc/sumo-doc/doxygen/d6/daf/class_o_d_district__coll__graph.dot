digraph "ODDistrict"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{ODDistrict\n||+ addSink()\l+ addSource()\l+ getRandomSink()\l+ getRandomSource()\l+ ODDistrict()\l+ sinkNumber()\l+ sourceNumber()\l+ ~ODDistrict()\l- ODDistrict()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Named\n|# myID\l|+ addTo()\l+ getID()\l+ Named()\l+ setID()\l+ ~Named()\l+ getIDSecure()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dbf/class_named.html",tooltip="Base class for objects which have an id. "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -mySources\n-mySinks" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{RandomDistributor\<\l std::string \>\n|- myProb\l- myProbs\l- myVals\l|+ add()\l+ clear()\l+ get()\l+ getOverallProb()\l+ getProbs()\l+ getVals()\l+ RandomDistributor()\l+ ~RandomDistributor()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9b/class_random_distributor.html"];
}
