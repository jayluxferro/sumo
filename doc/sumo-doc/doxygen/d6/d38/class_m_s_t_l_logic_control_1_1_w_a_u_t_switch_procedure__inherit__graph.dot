digraph "MSTLLogicControl::WAUTSwitchProcedure"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{MSTLLogicControl::WAUTSwitch\lProcedure\n|# myControl\l# myFrom\l# mySwitchSynchron\l# myTo\l# myWAUT\l|+ trySwitch()\l+ WAUTSwitchProcedure()\l+ ~WAUTSwitchProcedure()\l# getDiffToStartOfPhase()\l# getGSPValue()\l# isPosAtGSP()\l# switchToPos()\l- operator=()\l- WAUTSwitchProcedure()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{MSTLLogicControl::WAUTSwitch\lProcedure_GSP\n||+ trySwitch()\l+ WAUTSwitchProcedure_GSP()\l+ ~WAUTSwitchProcedure_GSP()\l# adaptLogic()\l- operator=()\l- WAUTSwitchProcedure_GSP()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/dab/class_m_s_t_l_logic_control_1_1_w_a_u_t_switch_procedure___g_s_p.html",tooltip="This class switches using the GSP algorithm. "];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{MSTLLogicControl::WAUTSwitch\lProcedure_JustSwitch\n||+ trySwitch()\l+ WAUTSwitchProcedure\l_JustSwitch()\l+ ~WAUTSwitchProcedure\l_JustSwitch()\l- operator=()\l- WAUTSwitchProcedure\l_JustSwitch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d9d/class_m_s_t_l_logic_control_1_1_w_a_u_t_switch_procedure___just_switch.html",tooltip="This class simply switches to the next program. "];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{MSTLLogicControl::WAUTSwitch\lProcedure_Stretch\n||+ trySwitch()\l+ WAUTSwitchProcedure\l_Stretch()\l+ ~WAUTSwitchProcedure\l_Stretch()\l# adaptLogic()\l# cutLogic()\l# getStretchAreaNo()\l# getStretchBereichDef()\l# stretchLogic()\l- operator=()\l- WAUTSwitchProcedure\l_Stretch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/dd3/class_m_s_t_l_logic_control_1_1_w_a_u_t_switch_procedure___stretch.html",tooltip="This class switches using the Stretch algorithm. "];
}
