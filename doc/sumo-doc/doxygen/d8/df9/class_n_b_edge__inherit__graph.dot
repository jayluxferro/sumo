digraph "NBEdge"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{NBEdge\n|+ ANGLE_LOOKAHEAD\l+ UNSPECIFIED_CONTPOS\l+ UNSPECIFIED_INTERNAL\l_LANE_INDEX\l+ UNSPECIFIED_LOADED\l_LENGTH\l+ UNSPECIFIED_OFFSET\l+ UNSPECIFIED_SIGNAL\l_OFFSET\l+ UNSPECIFIED_SPEED\l+ UNSPECIFIED_VISIBILITY\l_DISTANCE\l+ UNSPECIFIED_WIDTH\l- myAmInnerEdge\l- myAmMacroscopicConnector\l- myConnections\l- myConnectionsToDelete\l- myEndOffset\l- myFrom\l- myFromJunctionPriority\l- myGeom\l- myLanes\l- myLaneSpreadFunction\land 15 more...\l- myStartAngle\l- myEndAngle\l- myTotalAngle\l- myFromBorder\l- myToBorder\l|+ addBikeLane()\l+ addCrossingPointsAsIncoming\lWithGivenOutgoing()\l+ addLane()\l+ addSidewalk()\l+ addSign()\l+ allowVehicleClass()\l+ append()\l+ appendTurnaround()\l+ buildInnerEdges()\l+ clearControllingTLInformation()\land 73 more...\l+ reshiftPosition()\l+ mirrorX()\l+ getNumLanes()\l+ getPriority()\l+ getFromNode()\l+ getToNode()\l+ getStartAngle()\l+ getEndAngle()\l+ getShapeStartAngle()\l+ getShapeEndAngle()\l+ getTotalAngle()\l+ getLength()\land 15 more...\l+ getGeometry()\l+ getInnerGeometry()\l+ hasDefaultGeometry()\l+ hasDefaultGeometryEndpoints()\l+ hasDefaultGeometryEndpoint\lAtNode()\l+ setGeometry()\l+ addGeometryPoint()\l+ extendGeometryAtNode()\l+ shortenGeometryAtNode()\l+ shiftPositionAtNode()\land 7 more...\l+ setAsMacroscopicConnector()\l+ isMacroscopicConnector()\l+ setIsInnerEdge()\l+ isInnerEdge()\l+ connections_sorter()\l- addRestrictedLane()\l- addStraightConnections()\l- computeAngle()\l- computeLaneShape()\l- computeLaneShapes()\l- divideOnEdges()\l- divideSelectedLanesOnEdges()\l- init()\l- NBEdge()\l- operator=()\l- prepareEdgePriorities()\l- restoreRestrictedLane()\l- startShapeAt()\l- computePrioritySum()\l- firstIntersection()\l* myStartAngle\l* myEndAngle\l* myTotalAngle\l* myFromBorder\l* myToBorder\l* reshiftPosition()\l* mirrorX()\l* getNumLanes()\l* getPriority()\l* getFromNode()\l* getToNode()\l* getStartAngle()\l* getEndAngle()\l* getShapeStartAngle()\l* getShapeEndAngle()\l* getTotalAngle()\l* getLength()\land 15 more...\l* getGeometry()\l* getInnerGeometry()\l* hasDefaultGeometry()\l* hasDefaultGeometryEndpoints()\l* hasDefaultGeometryEndpoint\lAtNode()\l* setGeometry()\l* addGeometryPoint()\l* extendGeometryAtNode()\l* shortenGeometryAtNode()\l* shiftPositionAtNode()\land 7 more...\l* addEdge2EdgeConnection()\l* addLane2LaneConnection()\l* addLane2LaneConnections()\l* setConnection()\l* insertConnection()\l* getConnectionsFromLane()\l* getConnection()\l* getConnectionRef()\l* hasConnectionTo()\l* isConnectedTo()\land 19 more...\l* setAsMacroscopicConnector()\l* isMacroscopicConnector()\l* setIsInnerEdge()\l* isInnerEdge()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{Named\n|# myID\l|+ addTo()\l+ getID()\l+ Named()\l+ setID()\l+ ~Named()\l+ getIDSecure()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dbf/class_named.html",tooltip="Base class for objects which have an id. "];
  Node2 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Parameterised\n|- myMap\l|+ clearParameter()\l+ getDouble()\l+ getMap()\l+ getParameter()\l+ knowsParameter()\l+ Parameterised()\l+ Parameterised()\l+ setParameter()\l+ unsetParameter()\l+ updateParameter()\l+ writeParams()\l+ ~Parameterised()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dc7/class_parameterised.html",tooltip="An upper class for objects with additional parameters. "];
}
